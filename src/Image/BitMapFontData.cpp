// This file is automatically generated by FontCodeGenerator.
// Please copy it in Image source directory.
#include "stdafx.h"
#include "BitMapFont.h"
#include <Core/Assert.h>
#include <Core/ArrayView.h>
#include <Core/Utils.h>

namespace sg {
namespace image {
//=============================================================================
namespace {
//=============================================================================
u8 const fontCharCodes_0 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_0) == 91, "");
u64 const fontGlyphsData_0 [] = {
    0x00001f8c6318c63f, 0x0630042108000000, 0xd40000000000a500, 0x55445544002bea57, 0x100164d841300004, 0x1084440000000002, 0x2221084208241042, 0x08000000513e4000,
    0x18c00000000084f9, 0x00000003e0000001, 0x2110884000630000, 0x8003a33ae62e0042, 0x1108b800f9084298, 0x01d183a117001f11, 0x085e0023e9529880, 0xe8c5e18b8007460f,
    0x2e0004221110f800, 0x61e8c5c003a31746, 0x0006300c60000074, 0xf8000008c6018c00, 0x031804424c0003e0, 0x29380118fe315100, 0xa210862e001f18bd, 0xfc003a6318a4e003,
    0x09c21f801f084e10, 0x003a31e862e00021, 0x8427c008c63f8c62, 0x0c94a108f001f210, 0x8420045251953100, 0x8c635dc400f84210, 0xe00231cd67188011, 0xf18c5e003a318c62,
    0x0164d6318b800085, 0x062e002297c63178, 0x21084213e003a307, 0x18800e8c6318c400, 0x758c6310008a52a3, 0x4008c54454620047, 0x1110f80042114a8c, 0x0842108427003e11,
    0x421c084108210427, 0x000454401c842108, 0x01f0000000000000, 0xc66d08400f47d070, 0x001d10c5c00000f8, 0x17000005b31cda10, 0x01084e18b800707f, 0x421742d98e6c0000,
    0x884218040046319b, 0x199284210c020003, 0x2108430026a32a42, 0x00ad6b57800001c4, 0x5c0000118c66d000, 0xb6719b400001d18c, 0x00210b6639300010, 0x0705c0000010866d,
    0x000324213c40001d, 0xa3100000b6631880, 0x0155ac6200000452, 0x8800004544544000, 0xf1111f001d0b6631, 0x4220842088422001, 0x8821082210842108, 0x00000008a2002210,
};
static_assert(sizeof(fontGlyphsData_0) == 512, "");
u64 const fontAdvancesData_0 [] = {
    0x04500000510a8010, 0x0026000000000000, 0x000a800000021800,
};
static_assert(sizeof(fontAdvancesData_0) == 24, "");
u8 const fontKerningCharCodes_0 [] = {
    0x65,0x6c,0x66,0x66,0x69,0x73,0x69,0x74,0x72,0x6c,0x73,0x73,0x73,0x74,
};
static_assert(sizeof(fontKerningCharCodes_0) == 14, "");
u64 const fontKerningData_0 [] = {
    0x0000000000000002,
};
static_assert(sizeof(fontKerningData_0) == 8, "");

u8 const fontCharCodes_1 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_1) == 91, "");
u64 const fontGlyphsData_1 [] = {
    0x00001f8c6318c63f, 0x0630046318000000, 0xa80000000000a500, 0x55445544002beaa7, 0x200164d841300004, 0x2108880000000004, 0x4442108410482084, 0x08000000513e4000,
    0x18c00000000084f9, 0x00000003e0000001, 0x2110884000630000, 0x8003a33ae62e0042, 0x1108b800f9084298, 0x01d183a117001f11, 0x085e0023e9529880, 0xe8c5e18b8007460f,
    0x2e0004221110f800, 0x61e8c5c003a31746, 0x0006300c60000074, 0xf8000008c6018c00, 0x031804465c0003e0, 0x7b7801bdff7b5100, 0xb6318f6e001fbdbf, 0xfc003af7bdace003,
    0x19c63f801f18ce31, 0x003b73d8f6e00063, 0x8c67800def7fdef6, 0x1dbde318f001e631, 0x8c6006de719d7300, 0xdef7fdc400f8c631, 0xe0027bdff7bc801b, 0xfbdede003b7bdef6,
    0x01e7ef7bdb80018d, 0x0f6e0026b7ef7b78, 0x6318c633c003b787, 0xbd800edef7bdec00, 0x7fdef7b0008e76f7, 0xc00dedc476f60047, 0x1198f8004211dbde, 0x108421084e003e33,
    0x843808410821042e, 0x0004544039084210, 0x01f0000000000000, 0xef6f18c00b6fd870, 0x001db1edc00000fd, 0xb7000005b7bdfb18, 0x0318ce3db80070ff, 0xc63763dbdeec0000,
    0x98c6380c006f7bdb, 0x199ac6318e030007, 0x6318c70036f3ae63, 0x00ad7ff5800003cc, 0xdc00001bdef6d000, 0xbf7bdb400001dbde, 0x00318f6f7b300031, 0x8f8fc00000318f6d,
    0x00032c633cc0001f, 0xf7b00000b6f7bd80, 0x015ffef600000456, 0xd800006dc476c000, 0xf1999f001d8f6f7b, 0x8441084110844001, 0x1042104421084210, 0x00000008a2004421,
};
static_assert(sizeof(fontGlyphsData_1) == 512, "");
u64 const fontAdvancesData_1 [] = {
    0x0000000000000000, 0x0000000000000160,
};
static_assert(sizeof(fontAdvancesData_1) == 16, "");

u8 const fontCharCodes_2 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_2) == 91, "");
u64 const fontGlyphsData_2 [] = {
    0xc183060c183060ff, 0x0000000007f83060, 0x4080000000000000, 0x00c1800204081020, 0x00000009366c0000, 0x0000000000000000, 0x004897f448bfa448, 0xa208208228a08000,
    0x0000000000000828, 0xc000005c45504043, 0x0000000000001060, 0x0810208104000000, 0x0808404080810204, 0x0410204081020404, 0x2229fc4080000082, 0x0000000000000000,
    0x0000081023f88102, 0x6000000000000000, 0x0000000000020830, 0x000000000000fe00, 0x0c18000000000000, 0x0408204102000000, 0x509e000000102081, 0x000f2142850a1428,
    0x408102050c102000, 0x0414470000007c20, 0x00000fe082082082, 0x450604071020a238, 0x2450a1820000001c, 0x5f80000107f42891, 0x0711418080f81020, 0x1828ce8144700000,
    0x0c1fe00000388a0c, 0x0000408204102081, 0x830511c450511c00, 0xc18288e000001f41, 0x00000071140b98a0, 0xc180000c18000000, 0x60c0000000000000, 0x00000041060c0000,
    0x0007f0003f800000, 0x10410408288e0000, 0x1410300000030600, 0x0000ef060be4488a, 0x50a1427c891223e0, 0x1030715c000003f8, 0xf800002e62820408, 0x7d142850a1428488,
    0x043814285fc00000, 0x42fe00000ff0a102, 0x000704081021c0a1, 0x307881030715c000, 0x2448bb800002e628, 0x00001dd1224489f2, 0x081020408102041c, 0x4081020e0000000e,
    0x67000001e4281020, 0x33a2245850a24491, 0x4081020408380000, 0x5c78c00001fe1420, 0x000ef060c19326ad, 0xc992a54a9326c600, 0x830511c000007744, 0x800000e2283060c1,
    0xc10204fa1428509f, 0x3060c14470000001, 0x27e00000d8ca0c18, 0x067444853e850a14, 0x0501c850711c0000, 0x1127f800000e2383, 0x0000704081020408, 0xa0c183060c1838c0,
    0x48a0c1c600000388, 0x300000082850a224, 0xa1c54a912283060e, 0x20414288bb800000, 0x45dc00001dd11428, 0x0038204081020a14, 0x020810408a1fe000, 0x204087000007f851,
    0x7020408102040810, 0x8081010202040408, 0x10204081c0000040, 0x001c204081020408, 0x0000000008288a08, 0x0000000000000000, 0x00007f0000000000, 0x001b98a67088f000,
    0x14284f8102040c00, 0x0000000000007f0a, 0x000007e82040c1fc, 0x2142850be4081060, 0x5f0000000000003f, 0x47000000fa081ff0, 0x00e08102043c1022, 0x0a1fc00000000000,
    0x081033c8103e4285, 0x0003ba2448911e04, 0x0204081800400000, 0x80040000000001c1, 0x60c2040810204081, 0x34c68922e4081020, 0x1020408103000007, 0x0000000003820408,
    0x01ae4c99325b8000, 0x224c6c0000000000, 0x00000000000ee891, 0x00003e83060c17c0, 0x2850a13f00000000, 0xf0000000070409f4, 0x0382040f90a14287, 0x0e081028cec00000,
    0x217c000000000000, 0x8000000003e84c07, 0x000612040810f040, 0x2448b38000000000, 0x000000000001b192, 0x000001050a2245dc, 0x54a9122ee0000000, 0x7700000000000014,
    0x00000003b941020a, 0x020a14448bb80000, 0x822fc00000003041, 0x10208000007e8820, 0x0810204080820408, 0x0408102040810208, 0x0204080820408102, 0x0082040810208081,
    0x000000000000c243, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_2) == 1040, "");
u64 const fontAdvancesData_2 [] = {
    0x2303004431000300, 0x0000330000000021, 0x0000000004000000, 0x0000042400000000, 0x0000000404400200, 0x0000014441000002,
};
static_assert(sizeof(fontAdvancesData_2) == 48, "");

u8 const fontCharCodes_3 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_3) == 91, "");
u64 const fontGlyphsData_3 [] = {
    0xc183060c183060ff, 0x0000000007f83060, 0xc180000000000000, 0x00c1800204083060, 0x00000009366c0000, 0x0000000000000000, 0x004897f448bfa448, 0xb208208269a18000,
    0x0000000000000c34, 0xc00000dccdd4c0c3, 0x0000000000001060, 0x1830608104000000, 0x080840408183060c, 0x04183060c1830604, 0x2239fce080000082, 0x0000000000000000,
    0x0000081023f88102, 0x6000000000000000, 0x0000000000020830, 0x000000000000fe00, 0x0c18000000000000, 0x0408204102000000, 0x509e000000102081, 0x000f2142850a1428,
    0x408102050c102000, 0x0414470000007c20, 0x00000fe082082082, 0x450604071020a238, 0x2450a1820000001c, 0x5f80000107f42891, 0x0711418080f81020, 0x1828ce8144700000,
    0x0c1fe00000388a0c, 0x0000408204102081, 0x830511c450511c00, 0xc18288e000001f41, 0x00000071140b98a0, 0xc180000c18000000, 0x60c0000000000000, 0x00000041060c0000,
    0x0007f0003f800000, 0x0830c30c78df0000, 0x1c18300000030600, 0x0000e7870bf64c8d, 0xd9b3667d9b3363e0, 0x3878f95c000003fc, 0xf800002e72c70c18, 0x7d366cd9b366cc98,
    0x0c78346cdfc00000, 0x66fe00000ff9a306, 0x000f0c183063c1a3, 0x78f983070f15c000, 0x3c78fb800002e62c, 0x00001df1e3c78ffe, 0x183060c183060c3c, 0x60c1830f0000001e,
    0x67000001e62c1830, 0x3bb66c78f1e2c593, 0xc183060c18780000, 0x7c78c00001ff3460, 0x000ef8f1e3d7afbf, 0xcf5ebd7af3e7e600, 0xc78d11c0000067e7, 0x800000e22c78f1e3,
    0xc3060cfb366cd99f, 0x78f1e34470000003, 0x67e00000d8cb1e3c, 0x06f4c58b3ecd9b36, 0xc5c1c9d9f31c0000, 0x18b5f800000e33e7, 0x00007860c183060c, 0xb1e3c78f1e3c7dc0,
    0xd8f1e3ee00000388, 0x700000083871b366, 0xa1c55af5e3c78f1f, 0x6061c4c9bb800000, 0xc7dc00001dd93238, 0x0038204083871b36, 0xc30c30c30e3fe000, 0x60c18f000007fc70,
    0xf060c183060c1830, 0x8081010202040408, 0x3060c183c0000040, 0x003c60c183060c18, 0x0000000008288a08, 0x0000000000000000, 0x00007f0000000000, 0x001b99b670c8f000,
    0x366ccf83060c1c00, 0x0000000000007f9b, 0x000007e860c1c3fc, 0x3366cd9be60c1870, 0xdf0000000000003f, 0xc7000000fa183ff8, 0x01e183060c3c3062, 0x9b3fc00000000000,
    0x183073cc183e66cd, 0x00037e6cd9b33e0c, 0x060c183800c00000, 0x800c0000000003c3, 0xe1c60c183060c183, 0x77c78b26ec183060, 0x3060c18307000007, 0x0000000007860c18,
    0x01df1ebd7adb8000, 0x66ccec0000000000, 0x00000000000df9b3, 0x00003ec78f1e37c0, 0x6cd9b33f00000000, 0xf00000000f0c19f6, 0x03c3060f99b366cf, 0x1e183068cec00000,
    0x277c000000000000, 0x0000000003ee4e07, 0x0006160c1831f0c1, 0x366cf98000000000, 0x000000000001b99b, 0x000001071b63c7dc, 0xd7af1e3ee0000000, 0x7700000000000036,
    0x00000003b961861a, 0x020e1e4c8fb80000, 0x863fc00000003041, 0x3061800000ff1861, 0x183060c181860c18, 0x0408102040810218, 0x060c181820408102, 0x01860c1830618183,
    0x000000000001c347, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_3) == 1040, "");
u64 const fontAdvancesData_3 [] = {
    0x2303004430000300, 0x0000330000000021, 0x0000000003000000, 0x0000032300000010, 0x0000000303300200, 0x0000013430000002,
};
static_assert(sizeof(fontAdvancesData_3) == 48, "");

u8 const fontCharCodes_4 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_4) == 91, "");
u64 const fontGlyphsData_4 [] = {
    0x42424282848484fc, 0x0000003f21212141, 0x0000000000000000, 0x0404040808080000, 0x3600000006060004, 0x0000000000001236, 0x4800000000000000, 0x0012127f2244fe48,
    0x0408102245020000, 0x0000000000205122, 0x2e112a04020c0000, 0x0000020606000000, 0x0000000000000000, 0x0101020204040810, 0x0808040402020101, 0x0404080810101010,
    0x147f080800000102, 0x0000000000000022, 0x08087f0808080000, 0x0000000000000008, 0x0102060600000000, 0x7f00000000000000, 0x0000000000000000, 0x0606000000000000,
    0x0408081010000000, 0x0000000101020204, 0x212121212121211e, 0x0604040000001e21, 0x001f040404040405, 0x10204041221c0000, 0x1c0000007f020408, 0x2241404038404122,
    0x282830200000001c, 0x0000207f21222224, 0x40201f0101013f00, 0x221c0000001c2241, 0x1c22414141231d01, 0x102021417f000000, 0x0000000404080810, 0x4141221c2241221c,
    0x41221c0000003e41, 0x001c22405c624141, 0x0606000000000000, 0x0000000006060000, 0x0600000606000000, 0x0000000000010206, 0x0000007f00007f00, 0x0408304042443800,
    0x6040000000060600, 0x7741427c44485050, 0x3c4848483c000000, 0x0000001f22424444, 0x2101010202426458, 0x88483c0000002e31, 0x001f224244848484, 0x041c088888fc0000,
    0xfc0000003f424204, 0x020204041c088888, 0x0242645800000007, 0x00002e3121217102, 0x44447c448888dc00, 0x081c000000772222, 0x0702020404040408, 0x1010202070000000,
    0x0000000609081010, 0x12140c14242848dc, 0x08081c0000006722, 0x007f424204040404, 0x4a4a56a4c4860000, 0xee00000073212142, 0x11112a2a2a2a4444, 0x424244380000003b,
    0x00000e1121214141, 0x043c448488887c00, 0x4438000000070202, 0x3619212141414242, 0x448488887c000000, 0x000000772212143c, 0x414120108884c438, 0x1092fe0000001c23,
    0x000e040408080808, 0x4242428484ce0000, 0xe70000000e112121, 0x0a0a121222224242, 0x424242e700000004, 0x00001212162a2222, 0x140818242444ce00, 0x22770000003b1214,
    0x0702020404040a12, 0x10204484fc000000, 0x0000003f21220408, 0x0204040404080838, 0x0201010701010202, 0x0010100808040402, 0x1010102020380000, 0x0007040408080810,
    0x0000000041221408, 0x0000000000000000, 0x0000000000000000, 0x38221c000000007f, 0x080c0000002f1126, 0x1f224244443c0408, 0x7c00000000000000, 0x0000001e21010142,
    0x1121223c204040c0, 0x0000000000003e11, 0x001e21017f423c00, 0x041e040848300000, 0x0000000007020204, 0x111121227c000000, 0x0408080c0708101e, 0x000077224244443c,
    0x0404060008000000, 0x0000000000070202, 0x0808101010180020, 0xe40408080c030408, 0x00000073261a2444, 0x020404040408080c, 0x0000000000000702, 0x006b494992926f00,
    0x443a000000000000, 0x0000000077222244, 0x214141423c000000, 0x000000000000001e, 0x01021e224244443e, 0x21227c0000000003, 0x00001c08101e1111, 0x07020204443a0000,
    0x3c00000000000000, 0x0000000f11100c22, 0x0102020f04040000, 0x0000000000000609, 0x0036191122226300, 0x42e7000000000000, 0x00000000040a1222, 0x2a224444ee000000,
    0x0000000000000014, 0x00003714081824ee, 0x1222770000000000, 0x0000030204040a12, 0x1f120408123e0000, 0x0808081020000000, 0x0402020404040608, 0x0202020202020202,
    0x1010080202020202, 0x0404040418080808, 0x0000000c120c0102, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_4) == 1184, "");
u64 const fontAdvancesData_4 [] = {
    0x2303002231000300, 0x0000330000000021, 0x0000000004000000, 0x0010022200000000, 0x1010100402401200, 0x0000012421000003,
};
static_assert(sizeof(fontAdvancesData_4) == 48, "");
u8 const fontKerningCharCodes_4 [] = {
    0x6d,0x6d,0x6f,0x6d,
};
static_assert(sizeof(fontKerningCharCodes_4) == 4, "");

u8 const fontCharCodes_5 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_5) == 91, "");
u64 const fontGlyphsData_5 [] = {
    0xc183060c183060ff, 0x0000000007f83060, 0x4080000000000000, 0x00c1800204081020, 0x00000009366c0000, 0x0000000000000000, 0x004897f448bfa448, 0xa208208228a08000,
    0x0000000000000828, 0xc000005c45504043, 0x0000000000001060, 0x0810208104000000, 0x0808404080810204, 0x0410204081020404, 0x2229fc4080000082, 0x0000000000000000,
    0x0000081023f88102, 0x6000000000000000, 0x0000000000020830, 0x000000000000fe00, 0x0c18000000000000, 0x0408204102000000, 0x509e000000102081, 0x000f2142850a1428,
    0x408102050c102000, 0x0414470000007c20, 0x00000fe082082082, 0x450604071020a238, 0x2450a1820000001c, 0x5f80000107f42891, 0x0711418080f81020, 0x1828ce8144700000,
    0x040fe00000388a0c, 0x0000408204102081, 0x830511c450511c00, 0xc18288e000001f41, 0x00000071140b98a0, 0xc180000c18000000, 0x60c0000000000000, 0x00000041060c0000,
    0x0007f0003f800000, 0x10410408288e0000, 0x1410200000030600, 0x000083060be4488a, 0x3060c17e850a13e0, 0x1030511c000003f8, 0xf800000e22820408, 0x7d0c183060c18284,
    0x023c08103fc00000, 0x81fe00000fe04081, 0x000102040811e040, 0x307881030511c000, 0x183060800000e228, 0x00001060c18307fc, 0x0408102040810204, 0x4081020400000002,
    0xc1000001e4281020, 0x20a1265448922450, 0x2040810204080000, 0x3c70400001fc0810, 0x00083060c99356ae, 0x468c993162c38200, 0x830511c0000041c3, 0x800000e2283060c1,
    0x408102fe0c18305f, 0x3060c14470000000, 0x17e00000d8ca0c18, 0x04142444bf83060c, 0x0101c040511c0000, 0x1023f800000e2283, 0x0000204081020408, 0xa0c183060c183040,
    0x48a0c18200000388, 0x100000082850a224, 0xa1454a912283060c, 0x20414288a0800000, 0x4504000010511428, 0x0010204081020a14, 0x02081040820fe000, 0x204087000007f041,
    0x7020408102040810, 0x8081010202040408, 0x10204081c0000040, 0x001c204081020408, 0x0000000008288a08, 0x0000000000000000, 0x00007f0000000000, 0x000f90a17c80f000,
    0x0a1427c081020400, 0x0000000000003e85, 0x000003e82040c17c, 0x2142850be4081020, 0x5f0000000000001f, 0x21800000fa081ff0, 0x00204081021c0811, 0x0a17c00000000000,
    0x040813c8103e4285, 0x00010a1428519d02, 0x8102040800200000, 0x0004000000000040, 0x20c2040810204081, 0x1263449142040810, 0x0810204081000002, 0x0000000001810204,
    0x01264c99325b0000, 0xa146740000000000, 0x0000000000042850, 0x00003e83060c17c0, 0x1428509f00000000, 0xf0000000010204fa, 0x0102040f90a14285, 0x0204081467400000,
    0x417c000000000000, 0x8000000003e82c07, 0x000612040810f040, 0x1428508000000000, 0x000000000000790a, 0x000001050a224504, 0x54aa0c1820000000, 0x6300000000000014,
    0x000000031941020a, 0x020a14448a080000, 0x820fc00000001041, 0x10208000007e0820, 0x0810204080820408, 0x0408102040810208, 0x0204080820408102, 0x0082040810208081,
    0x000000000000c243, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_5) == 1040, "");
u64 const fontAdvancesData_5 [] = {
    0x2303004431000300, 0x0000330000000021, 0x0000000016000000, 0x0110042400000000, 0x0001010504611301, 0x0000014441000012,
};
static_assert(sizeof(fontAdvancesData_5) == 48, "");

u8 const fontCharCodes_6 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_6) == 91, "");
u64 const fontGlyphsData_6 [] = {
    0xc183060c183060ff, 0x0000000007f83060, 0xc180000000000000, 0x00c1800204083060, 0x00000009366c0000, 0x0000000000000000, 0x004897f448bfa448, 0xb208208269a18000,
    0x0000000000000c34, 0xc00000dccdd4c0c3, 0x0000000000001060, 0x1830608104000000, 0x080840408183060c, 0x04183060c1830604, 0x2239fce080000082, 0x0000000000000000,
    0x0000081023f88102, 0x6000000000000000, 0x0000000000020830, 0x000000000000fe00, 0x0c18000000000000, 0x0408204102000000, 0x509e000000102081, 0x000f2142850a1428,
    0x408102050c102000, 0x0414470000007c20, 0x00000fe082082082, 0x450604071020a238, 0x2450a1820000001c, 0x5f80000107f42891, 0x0711418080f81020, 0x1828ce8144700000,
    0x040fe00000388a0c, 0x0000408204102081, 0x830511c450511c00, 0xc18288e000001f41, 0x00000071140b98a0, 0xc180000c18000000, 0x60c0000000000000, 0x00000041060c0000,
    0x0007f0003f800000, 0x0830c30c78df0000, 0x1c18300000030600, 0x0000c3870bf64c8d, 0x78f1e37f8f1b33e0, 0x3078d11c000003fc, 0xf800000e22c60c18, 0x7d1e3c78f1e3c68c,
    0x067c18307fc00000, 0x83fe00000fe0c183, 0x0003060c1833e0c1, 0x78f983078d11c000, 0x3c78f1800000e22c, 0x000018f1e3c78ffe, 0x0c183060c183060c, 0x60c1830600000006,
    0xe3000001e62c1830, 0x31b36e7cd9b264d1, 0x60c183060c180000, 0x7c78c00001fc1830, 0x000c78f1e3d7afbf, 0xcf5ebd7af3e7c600, 0xc78d11c0000063e7, 0x800000e22c78f1e3,
    0xc18306ff1e3c78df, 0x78f1e34470000000, 0x37e00000d8cb1e3c, 0x043464c5bfc78f1e, 0xc1c1c1d1d31c0000, 0x1831f800000e32e3, 0x00003060c183060c, 0xb1e3c78f1e3c78c0,
    0xd8f1e3c600000388, 0x300000083871b366, 0xa1455af5e3c78f1e, 0x6061c4c9a1800000, 0xc78c000018593238, 0x0010204083871b36, 0xc30c30c3060fe000, 0x60c18f000007f060,
    0xf060c183060c1830, 0x8081010202040408, 0x3060c183c0000040, 0x003c60c183060c18, 0x0000000008288a08, 0x0000000000000000, 0x00007f0000000000, 0x000f99b37cc0f000,
    0x9b3667c183060c00, 0x0000000000003ecd, 0x000003e860c1c37c, 0x3366cd9be60c1830, 0xdf0000000000001f, 0xc7000000fa183ff8, 0x00c183060c3c3064, 0x9b37c00000000000,
    0x0c1833cc183e66cd, 0x00019b366cd99f06, 0x83060c1800600000, 0x000c0000000000c1, 0x61c60c183060c183, 0xb3e3c593460c1830, 0x183060c183000003, 0x000000000383060c,
    0x01af5ebd7adb8000, 0xb366740000000000, 0x0000000000066cd9, 0x00003ec78f1e37c0, 0x366cd99f00000000, 0xf000000003060cfb, 0x0183060f99b366cd, 0x060c183467400000,
    0x273c000000000000, 0x0000000003ee2e07, 0x0006160c1831f0c1, 0x366cd98000000000, 0x000000000000799b, 0x000001071b63c78c, 0xd7af1e3c60000000, 0x6300000000000036,
    0x000000031961861a, 0x020e1e4c8e180000, 0x861fc00000001041, 0x3061800000fe1861, 0x183060c181860c18, 0x0408102040810218, 0x060c181820408102, 0x01860c1830618183,
    0x000000000001c347, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_6) == 1040, "");
u64 const fontAdvancesData_6 [] = {
    0x2303004430000300, 0x0000330000000021, 0x0000000015000000, 0x0010032300000010, 0x0111010303511101, 0x0000013430000012,
};
static_assert(sizeof(fontAdvancesData_6) == 48, "");

u8 const fontCharCodes_7 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_7) == 91, "");
u64 const fontGlyphsData_7 [] = {
    0x42424282848484fc, 0x0000003f21212141, 0x0000000000000000, 0x0404040808080000, 0x3600000006060004, 0x0000000000001236, 0x4800000000000000, 0x0012127f2244fe48,
    0x0408102245020000, 0x0000000000205122, 0x2e112a04020c0000, 0x0000020606000000, 0x0000000000000000, 0x0101020204040810, 0x0808040402020101, 0x0404080810101010,
    0x147f080800000102, 0x0000000000000022, 0x08087f0808080000, 0x0000000000000008, 0x0102060600000000, 0x7f00000000000000, 0x0000000000000000, 0x0606000000000000,
    0x0408081010000000, 0x0000000101020204, 0x212121212121211e, 0x0604040000001e21, 0x001f040404040405, 0x10204041221c0000, 0x1c0000007f020408, 0x2241404038404122,
    0x282830200000001c, 0x0000207f21222224, 0x40201f0101013f00, 0x221c0000001c2241, 0x1c22414141231d01, 0x102021417f000000, 0x0000000404080810, 0x4141221c2241221c,
    0x41221c0000003e41, 0x001c22405c624141, 0x0606000000000000, 0x0000000006060000, 0x0600000606000000, 0x0000000000010206, 0x0000007f00007f00, 0x0408304042443800,
    0x6040000000060600, 0x4141427c44485050, 0x3e4444443c000000, 0x0000001f21414242, 0x2101010202424438, 0x84443c0000000e11, 0x001f214142828282, 0x021e040404fc0000,
    0xfc0000003f010102, 0x010102021e040404, 0x0242443800000001, 0x00000e1121213102, 0x42427e4484848400, 0x0404000000212121, 0x0101010202020204, 0x1010202020000000,
    0x0000000609081010, 0x11160a1222244484, 0x0404040000002121, 0x007f010102020202, 0x4a4a56a4c4840000, 0x4400000021212142, 0x11112a2a2a2a4444, 0x4242443800000011,
    0x00000e1121214141, 0x023e428284847c00, 0x4438000000010101, 0x3619212141414242, 0x428284847c000000, 0x000000212111123e, 0x4140201008844438, 0x1010fe0000001c22,
    0x0004040408080808, 0x4242428484840000, 0x820000000e112121, 0x0a0a121222224242, 0x4242424200000004, 0x00001212162a2222, 0x1408182424448400, 0x2242000000111214,
    0x0202020404040a12, 0x10204080fc000000, 0x0000003f01020408, 0x0204040404080838, 0x0201010701010202, 0x0010100808040402, 0x1010102020380000, 0x0007040408080810,
    0x0000000041221408, 0x0000000000000000, 0x0000000000000000, 0x38221c000000007f, 0x04040000001f1126, 0x0f112122221e0204, 0x3c00000000000000, 0x0000001e21010142,
    0x1121223c20404040, 0x0000000000001e11, 0x001e21017f423c00, 0x020f020424180000, 0x0000000001010102, 0x111121223c000000, 0x020404040708101e, 0x000011112122221e,
    0x0202020004000000, 0x0000000000010101, 0x0808101010100020, 0x4202040404030408, 0x00000021130d1222, 0x0102020202040404, 0x0000000000000301, 0x0049494992926c00,
    0x221d000000000000, 0x0000000011111122, 0x214141423c000000, 0x000000000000001e, 0x01021e224244443c, 0x21223c0000000001, 0x00000808101e1111, 0x01010102221d0000,
    0x1c00000000000000, 0x0000000e11100c22, 0x0102020f04040000, 0x0000000000000609, 0x000e111122222200, 0x2121000000000000, 0x0000000002050911, 0x1511212222000000,
    0x000000000000000a, 0x0000090a040c1222, 0x1222220000000000, 0x0000010204040a12, 0x1f020408103e0000, 0x0808081020000000, 0x0402020404040608, 0x0202020202020202,
    0x1010080202020202, 0x0404040418080808, 0x0000000c120c0102, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_7) == 1184, "");
u64 const fontAdvancesData_7 [] = {
    0x2303002231000300, 0x0000330000000021, 0x0000000005000000, 0x0110022200000000, 0x1110110402411301, 0x0000012421110113,
};
static_assert(sizeof(fontAdvancesData_7) == 48, "");

u8 const fontCharCodes_8 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_8) == 91, "");
u64 const fontGlyphsData_8 [] = {
    0xc06030180c0603ff, 0x6030180c06030180, 0x000000000000ffc0, 0x0000000000000000, 0x1008040200000000, 0x1800020100804020, 0x6c36000000000030, 0x0000000000000048,
    0x0000000000000000, 0x3fc8844000000000, 0x00022113fc844221, 0x0424280800000000, 0x0202848404040404, 0x0000000000000000, 0x84a28a0204818000, 0x0c060000000006f0,
    0x0000000000000008, 0x0000000000000000, 0x8040201008080404, 0x0040200804020100, 0x8040200804010001, 0x2020100804020100, 0x4000000000004040, 0x0000220a070fe080,
    0x0000000000000000, 0x7f04020100000000, 0x0000000000402010, 0x0000000000000000, 0x0020203018000000, 0x0000000000000000, 0x000000007f000000, 0x0000000000000000,
    0x1800000000000000, 0x4020000000000030, 0x0202010100808040, 0x0000000000080404, 0xa05028140a05027e, 0x000003f205028140, 0x8040281808040000, 0x00f8100804020100,
    0x0405047c00000000, 0x0808080808080808, 0x047c000000000ff8, 0x0080401e10080405, 0x0000000003e20a03, 0x2111090502818080, 0x0000040203fe8242, 0xe010080402ff0000,
    0x03e20a030080200f, 0x0805047c00000000, 0x0a030180c05067d0, 0x03ff0000000003e2, 0x1010080804040206, 0x0000000000402020, 0xa08f88280c05047c, 0x000003e20a030180,
    0x30180c05047c0000, 0x03e20a0100be60a0, 0x0000000000000000, 0x1800000301800000, 0x0000000000000030, 0x0003018000000000, 0x0000002020301800, 0x1fc0000000000000,
    0x00000001fc000000, 0x08080405047c0000, 0x00c0600008080808, 0x40a0201800000000, 0x0904823e11088281, 0x843f000000000f7a, 0x0281208fc4241208, 0x0000000007fc0a05,
    0x804020180c07057c, 0x00000be60a030100, 0x50281409047f0000, 0x03fa0a05028140a0, 0x140a05ff00000000, 0x0a0502010483c128, 0x05ff000000000ffc, 0x02010483c128140a,
    0x0000000000780804, 0xf84020180c07057c, 0x00000be60a030180, 0xc824120905ef0000, 0x0f7a09048241209f, 0x2010081f00000000, 0x1008040201008040, 0x01e00000000000f8,
    0x8040201008040201, 0x0000000001e10902, 0x04824222110905cf, 0x00000e7a088c4a15, 0x40201008040f0000, 0x0ffc0a0502010080, 0x4d17070100000000, 0x06030180c0623119,
    0x05e7000000000e3c, 0xc251289248a45219, 0x000000000e7a0904, 0xc06030180c05047c, 0x000003e20a030180, 0x50281409047f0000, 0x0078080402011f90, 0x0c05047c00000000,
    0x8a030180c0603018, 0x047f000000000de3, 0x22091f9050281409, 0x000000000e7a0884, 0x200f80280c07047c, 0x000003e20e030180, 0x0100844623ff0000, 0x03e0402010080402,
    0x120905c700000000, 0x1104824120904824, 0x03830000000001c1, 0x4422111048241406, 0x000000000080a050, 0x249048280c060383, 0x0000014150a85449, 0x0282211105ef0000,
    0x0f7a088844140402, 0x211105ef00000000, 0x4020100804020282, 0x03ff0000000003e0, 0x0404040202020905, 0x000000000ffc0a09, 0x8040201008040207, 0xc020100804020100,
    0x8040100802010001, 0x0100802010040200, 0x2010080700000000, 0x1008040201008040, 0x10000001c0804020, 0x0000000004111050, 0x0000000000000000, 0x0000000000000000,
    0x0000000000000000, 0xc00000000000ff80, 0x0df30504fc40208f, 0x1008040300000000, 0x1a050281218f4020, 0x00000000000003da, 0x0100a09f80000000, 0x0000000007e20802,
    0xb097880402010180, 0x00000de309028140, 0x8000000000000000, 0x03e20803ff80a08f, 0x1088642c00000000, 0x080402010081e020, 0x0000000000000038, 0x8140b0b780000000,
    0x1e10900805e30902, 0x1187402010080403, 0x00000e3a09048241, 0x6000000800000000, 0x0038080402010080, 0x0020000000000000, 0x2010080402018000, 0x0403018101008040,
    0x1211109c40201008, 0x0000000007191854, 0x0080402010080403, 0x0000003808040201, 0xe000000000000000, 0x0c9c46231188c45d, 0x0000000000000000, 0x0904824111876000,
    0x0000000000000e3a, 0x0180a08f80000000, 0x0000000003e20a03, 0x218f600000000000, 0x804023d21a050281, 0x8000000000000380, 0x05e309028140b0b7, 0x00000000e0201008,
    0x08040201218f6000, 0x0000000000000038, 0x7e00904fc0000000, 0x0000000003f20900, 0x0083e02010000000, 0x000000e088040201, 0xe000000000000000, 0x0dc31104824120b8,
    0x0000000000000000, 0xa088444120b8e000, 0x0000000000000080, 0x824120b8e0000000, 0x0000000003624924, 0x1138e00000000000, 0x00000e3910501014, 0xe000000000000000,
    0x0080a088444120b8, 0x0000000003010101, 0x08080808084fe000, 0x04040000000007fa, 0x0200808040201008, 0x0001004020100804, 0x0080402010080402, 0x8040201008040201,
    0x4020100804010100, 0x2010080402020080, 0x0030240c00004040, 0x0000000000000000, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_8) == 1640, "");
u64 const fontAdvancesData_8 [] = {
    0x3525226652102500, 0x0002550000000041, 0x0000000004000000, 0x1000262600000000, 0x1100000615600400, 0x0000036661000003,
};
static_assert(sizeof(fontAdvancesData_8) == 48, "");

u8 const fontCharCodes_9 [] = {
    0x00,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x3a,0x3d,0x3e,0x3f,0x40,0x41,0x42,0x43,0x44,
    0x45,0x46,0x50,0x51,0x52,0x53,
};
static_assert(sizeof(fontCharCodes_9) == 38, "");
u64 const fontGlyphsData_9 [] = {
    0x1801801801801fff, 0x0180180180180180, 0x000000000000fff8, 0x0000000000000000, 0x6006000000000000, 0x1f83fcffffff0f00, 0x000000030c39c3fc, 0x0440279e09006000,
    0x00030c2942641082, 0x1f0f090090060000, 0x0c29426420440280, 0x0900900600000003, 0x4264204492891f0f, 0x6230c0f000030c29, 0x8418418618014624, 0x00000f030c4024f2,
    0x0000000000000000, 0xfff801fff0000000, 0x1bffa01bff804ffc, 0x01e01a01a01a01a0, 0x801fff801fff3ff2, 0x1801801801801801, 0x04402000fff80180, 0x0900600600901082,
    0x6000000402204108, 0x9009016829450a60, 0x00060650a2941680, 0x820446249270e000, 0x0e49246220410810, 0x0a00500280180007, 0x00a0140280280140, 0x4a0a506301802805,
    0x528a50a505282941, 0x01800630a514a294, 0x140140280500a014, 0x1801400a00500280, 0x514a294528a50c60, 0x5052829414a0a50a, 0xc03000000000c60a, 0x009016829450aa05,
    0x0aa05c0300000006, 0x50aa65c931682945, 0x0000060090168294, 0x0a29416809006000, 0x000000000c03a055, 0x550a294168090060, 0x0550a294168c93a6, 0x0900900900f0c03a,
    0x0090f9f801801f9f, 0x000000000f009009, 0xfff801801fff0000, 0x0000000000000000, 0xc89f94f230c0f000, 0x0000000000f01c81, 0x0140280500a00c00, 0x1e01200c0300500a,
    0x44088090060000f0, 0xe01206c090110220, 0x8090060000f01e01, 0x0440881102204408, 0x0e0000100601a024, 0x8e11222044088090, 0x00306503a03c04c0, 0x80900900901081f8,
    0x0680180140220410, 0x0900901081f81f86, 0x9bed5ea204108090, 0x901081f81f86069f, 0x8018014022041080, 0x81f81f8606801801, 0xed5ea20410809010, 0x1f86069f9bedbedb,
    0x18018018019f9e07, 0x9820440240240280, 0xc418819f9e070601, 0x442244648a911a21, 0x027fe00006019821, 0x4024024024024024, 0xe0000007fe402402, 0x664c3580302602cf,
    0x0007fe40241a43c4, 0x2204204198060000, 0x6019820420440240, 0x2041980600000000, 0x82042644f24f2264, 0x0000000000006019,
};
static_assert(sizeof(fontGlyphsData_9) == 688, "");

u8 const fontCharCodes_10 [] = {
    0x00,0x20,0x21,0x22,0x23,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3d,0x3f,0x41,0x42,
    0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x61,0x62,0x63,
    0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0xb0,
};
static_assert(sizeof(fontCharCodes_10) == 91, "");
u64 const fontGlyphsData_10 [] = {
    0x0fe1961969ced87f, 0x0c00000000000000, 0x28a00030c00410c3, 0xe500000000000000, 0x1624600029f29253, 0x2840000006246842, 0x0000104000b91b84, 0x0410421000000000,
    0x2082081020102041, 0xa11f100000002108, 0x047c410000000000, 0x1860000000000001, 0x00007c0000000002, 0x0018600000000000, 0x0000821042084100, 0x00007a1861861780,
    0x80000f8820828c20, 0x780000fc23108217, 0x84000007a181e821, 0x417c000043f45251, 0x0617800007a181f0, 0x8420fc00007a185f, 0x5e86178000008210, 0x83e8617800007a18,
    0x60061800000007a1, 0x8600618000000018, 0x01f01f0000000021, 0x030c008430c5e000, 0x00861fe186148c00, 0x0007e18617d144f0, 0xf0007a104104185e, 0x7f0003d186186144,
    0x07f000fc10413c10, 0x185e0000410413c1, 0xe18610007a187904, 0x10411f000861861f, 0x041043e0007c4104, 0x4b14946100039145, 0x0410410410008614, 0x186186dce1000fc1,
    0x61c6996386100086, 0x7a186186185e0008, 0x00417e186185f000, 0x00b91a6186185e00, 0x0008517e186185f0, 0xf0007a181818185e, 0x6100010410410413, 0x8610007a18618618,
    0x1861000312492861, 0x92861000873b6186, 0x5128610008614942, 0x421083f000104208, 0x0410411c000fc108, 0x20810408201c1041, 0x820820820e000410, 0x0000085230000e20,
    0x0000000000000000, 0x0b91790380000fc0, 0x007e186374104100, 0x0007a10617800000, 0x0000bb1871ba0820, 0x5e000781fe178000, 0x0000000410411c18, 0x10417a0bb1871b80,
    0x8010000086186374, 0x6004000003841041, 0xac82083391410410, 0x04104106000cca18, 0xa6b7400000003841, 0x1863740000000a69, 0xa186178000000086, 0x7638637400000007,
    0x0bb1871380000041, 0x0004106374000082, 0x0007a07817800000, 0x00007220823c2080, 0x00000bb186184000, 0x0000003124a18400, 0x00000004ad861840, 0x4000000085231284,
    0x7c00007a0bb18618, 0x4208210000fc2108, 0x0410410401020820, 0x1081041021041041, 0x0000312300002104, 0x0000000000000000,
};
static_assert(sizeof(fontGlyphsData_10) == 688, "");

//=============================================================================
// Total memory footprint: 12798 Bytes
BitMapFont const fonts [] = {
    { "tech", 91, 7, ubyte2(5, 9), 0, 6, 7, 1, 2, 1, {6,5,4,}, {-1,-2,}, fontCharCodes_0, fontGlyphsData_0, fontAdvancesData_0, fontKerningCharCodes_0, fontKerningData_0 SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_0) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_0) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_0) SG_COMMA SG_ARRAYSIZE(fontKerningCharCodes_0) SG_COMMA SG_ARRAYSIZE(fontKerningData_0) ) }, // 729 Bytes
    { "tech", 91, 0, ubyte2(5, 9), 1, 6, 7, 1, 1, 0, {6,5,}, {}, fontCharCodes_1, fontGlyphsData_1, fontAdvancesData_1, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_1) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_1) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_1) SG_COMMA 0 SG_COMMA 0 ) }, // 699 Bytes
    { "tech", 91, 0, ubyte2(7, 13), 0, 8, 10, 1, 4, 0, {8,7,6,5,4,}, {}, fontCharCodes_2, fontGlyphsData_2, fontAdvancesData_2, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_2) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_2) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_2) SG_COMMA 0 SG_COMMA 0 ) }, // 1259 Bytes
    { "tech", 91, 0, ubyte2(7, 13), 1, 8, 10, 1, 4, 0, {8,7,6,5,4,}, {}, fontCharCodes_3, fontGlyphsData_3, fontAdvancesData_3, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_3) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_3) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_3) SG_COMMA 0 SG_COMMA 0 ) }, // 1259 Bytes
    { "tech", 91, 2, ubyte2(8, 13), 2, 8, 10, 1, 4, 0, {8,7,6,5,4,}, {1,}, fontCharCodes_4, fontGlyphsData_4, fontAdvancesData_4, fontKerningCharCodes_4, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_4) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_4) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_4) SG_COMMA SG_ARRAYSIZE(fontKerningCharCodes_4) SG_COMMA 0 ) }, // 1407 Bytes
    { "tech sans", 91, 0, ubyte2(7, 13), 0, 8, 10, 1, 4, 0, {8,7,6,5,4,3,2,}, {}, fontCharCodes_5, fontGlyphsData_5, fontAdvancesData_5, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_5) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_5) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_5) SG_COMMA 0 SG_COMMA 0 ) }, // 1259 Bytes
    { "tech sans", 91, 0, ubyte2(7, 13), 1, 8, 10, 1, 4, 0, {8,7,6,5,4,3,}, {}, fontCharCodes_6, fontGlyphsData_6, fontAdvancesData_6, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_6) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_6) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_6) SG_COMMA 0 SG_COMMA 0 ) }, // 1259 Bytes
    { "tech sans", 91, 0, ubyte2(8, 13), 2, 8, 10, 1, 4, 0, {8,7,6,5,4,2,}, {}, fontCharCodes_7, fontGlyphsData_7, fontAdvancesData_7, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_7) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_7) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_7) SG_COMMA 0 SG_COMMA 0 ) }, // 1403 Bytes
    { "tech", 91, 0, ubyte2(9, 16), 0, 10, 12, 1, 4, 0, {10,9,8,7,6,5,4,}, {}, fontCharCodes_8, fontGlyphsData_8, fontAdvancesData_8, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_8) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_8) SG_COMMA SG_ARRAYSIZE(fontAdvancesData_8) SG_COMMA 0 SG_COMMA 0 ) }, // 1859 Bytes
    { "tech symbols", 38, 0, ubyte2(12, 12), 0, 17, 12, 1, 0, 0, {17,}, {}, fontCharCodes_9, fontGlyphsData_9, nullptr, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_9) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_9) SG_COMMA 0 SG_COMMA 0 SG_COMMA 0 ) }, // 806 Bytes
    { "tech", 91, 0, ubyte2(6, 10), 0, 7, 8, 1, 0, 0, {7,}, {}, fontCharCodes_10, fontGlyphsData_10, nullptr, nullptr, nullptr SG_CODE_FOR_ASSERT( SG_COMMA SG_ARRAYSIZE(fontCharCodes_10) SG_COMMA SG_ARRAYSIZE(fontGlyphsData_10) SG_COMMA 0 SG_COMMA 0 SG_COMMA 0 ) }, // 859 Bytes
};
size_t const fontCount = SG_ARRAYSIZE(fonts);
//=============================================================================
}
//=============================================================================
ArrayView<BitMapFont const> GetAlwaysAvailableBitmapFonts()
{
    return AsArrayView(fonts);
}
//=============================================================================
}
}
